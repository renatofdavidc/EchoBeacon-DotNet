// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ProjetoChallengeMottu.Data;

#nullable disable

namespace ProjetoChallengeMottu.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250925120706_AddLocalizacao")]
    partial class AddLocalizacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoChallengeMottu.Models.EchoBeacon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<long?>("MotoId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<string>("NumeroIdentificacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.HasKey("Id");

                    b.HasIndex("MotoId")
                        .IsUnique()
                        .HasFilter("\"MotoId\" IS NOT NULL");

                    b.HasIndex("NumeroIdentificacao")
                        .IsUnique();

                    b.ToTable("ECHOBEACON");
                });

            modelBuilder.Entity("ProjetoChallengeMottu.Models.Localizacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataHoraRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<long?>("EchoBeaconId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<long>("MotoId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EchoBeaconId");

                    b.HasIndex("MotoId");

                    b.ToTable("LOCALIZACOES");
                });

            modelBuilder.Entity("ProjetoChallengeMottu.Models.Moto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.HasKey("Id");

                    b.ToTable("MOTOS");
                });

            modelBuilder.Entity("ProjetoChallengeMottu.Models.EchoBeacon", b =>
                {
                    b.HasOne("ProjetoChallengeMottu.Models.Moto", "Moto")
                        .WithOne("EchoBeacon")
                        .HasForeignKey("ProjetoChallengeMottu.Models.EchoBeacon", "MotoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("ProjetoChallengeMottu.Models.Localizacao", b =>
                {
                    b.HasOne("ProjetoChallengeMottu.Models.EchoBeacon", "EchoBeacon")
                        .WithMany()
                        .HasForeignKey("EchoBeaconId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProjetoChallengeMottu.Models.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EchoBeacon");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("ProjetoChallengeMottu.Models.Moto", b =>
                {
                    b.Navigation("EchoBeacon");
                });
#pragma warning restore 612, 618
        }
    }
}
